var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[31.0508, 19.9361, 12.9678, 24.2167, 0.0658762], "total":[163974, 221594, 657, 1, 318], "name":"Kernel System", "max_resources":[854400, 1708800, 2713, 1518, 42720], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[134500, 172452, 397, 0, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[4069, 5395, 61, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 5 global loads and 5 global stores. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 5 global loads and 5 global stores."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[0, 67, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"Pipe and channel resources", "type":"group", "children":[{"name":"spMV_pipeline.cl:8 (c0)", "type":"resource", "data":[15, 104, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":8}]], "details":[{"type":"text", "text":"Channel is implemented 32 bits wide by 1 deep."}, {"type":"brief", "text":"32b wide by 1 deep."}, {"type":"text", "text":"Requested depth was 0."}, {"type":"text", "text":"Channel depth was changed for the following reason:", "details":[{"type":"text", "text":"instruction scheduling requirements"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}, {"name":"spMV_pipeline.cl:8 (c1)", "type":"resource", "data":[15, 104, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":8}]], "details":[{"type":"text", "text":"Channel is implemented 32 bits wide by 1 deep."}, {"type":"brief", "text":"32b wide by 1 deep."}, {"type":"text", "text":"Requested depth was 0."}, {"type":"text", "text":"Channel depth was changed for the following reason:", "details":[{"type":"text", "text":"instruction scheduling requirements"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"name":"execute", "compute_units":1, "type":"function", "total_percent":[0.770591, 0.580407, 0.256262, 0, 0.0658762], "total_kernel_resources":[3699, 4379, 0, 1, 63], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Coalesced Private Variables: \\n - \'row_prev\' (spMV_pipeline.cl:40)\\n - \'row_curr\' (spMV_pipeline.cl:40)", "type":"resource", "data":[0, 0, 0, 0, 4], "debug":[[{"filename":"spMV_pipeline.cl", "line":40}]], "details":[{"type":"text", "text":"Type: Shift Register (1 or fewer tap point)"}, {"type":"text", "text":"1 register of width 64 and depth 12 (depth was increased by a factor of 12 due to a loop initiation interval of 12.)"}, {"type":"brief", "text":"Shift Register,\\n1 reg, 64 width by 12 depth"}]}, {"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:50)", "type":"resource", "data":[0, 0, 0, 0, 4], "debug":[[{"filename":"spMV_pipeline.cl", "line":50}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 65 and depth 13 (depth was increased by a factor of 12 due to a loop initiation interval of 12.)"}, {"type":"brief", "text":"Register,\\n1 reg, 65 width by 13 depth"}]}, {"name":"Private Variable: \\n - \'m\' (spMV_pipeline.cl:49)", "type":"resource", "data":[7, 15, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":49}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 11 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 11 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'y_temp\' (spMV_pipeline.cl:43)", "type":"resource", "data":[19, 33, 0, 0, 2], "debug":[[{"filename":"spMV_pipeline.cl", "line":43}]], "details":[{"type":"text", "text":"Type: Shift Register (1 or fewer tap point)"}, {"type":"text", "text":"1 register of width 32 and depth 15 (depth was increased by a factor of 12 due to a loop initiation interval of 12.)"}, {"type":"brief", "text":"Shift Register,\\n1 reg, 32 width by 15 depth"}]}, {"name":"execute.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 66, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"spMV_pipeline.cl:49", "type":"resource", "data":[0, 65, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":49}]]}, {"name":"spMV_pipeline.cl:50", "type":"resource", "data":[2, 1, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":50}]]}]}, {"name":"Feedback", "type":"resource", "data":[8, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 2, 0, 0, 0]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:49", "type":"resource", "data":[260, 65, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":49}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":1, "data":[64, 0, 0, 0, 0]}, {"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[67, 1, 0, 0, 0]}, {"name":"64-bit Select", "type":"resource", "count":1, "data":[64, 64, 0, 0, 0]}, {"name":"65-bit Integer Add", "type":"resource", "count":1, "data":[65, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:50", "type":"resource", "data":[21, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":50}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[21, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"execute.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 3, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[2, 3, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[23, 11, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:49", "type":"resource", "data":[8, 7, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":49}]]}, {"name":"spMV_pipeline.cl:60", "type":"resource", "data":[7, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":60}]]}, {"name":"spMV_pipeline.cl:85", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":85}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[5, 3, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:49", "type":"resource", "data":[15, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":49}]], "children":[{"name":"11-bit Integer Add", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"11-bit Integer Compare", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"execute.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:89", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":89}]]}]}]}, {"name":"execute.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[79, 75, 0, 0, 3], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[79, 75, 0, 0, 3]}]}, {"name":"Feedback", "type":"resource", "data":[54, 38, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:68", "type":"resource", "data":[27, 19, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":68}]]}, {"name":"spMV_pipeline.cl:85", "type":"resource", "data":[27, 19, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":85}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[7, 5, 0, 0, 2], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:79", "type":"resource", "data":[3, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":79}]], "children":[{"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:82", "type":"resource", "data":[397, 319, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":82}]], "children":[{"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call", "type":"resource", "count":1, "data":[394, 317, 0, 0, 0]}, {"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:85", "type":"resource", "data":[5, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":85}]], "children":[{"name":"Channel Write", "type":"resource", "count":1, "data":[5, 2, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"execute.B4", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[344, 457, 0, 0, 15], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[344, 457, 0, 0, 15]}]}, {"name":"Feedback", "type":"resource", "data":[130, 133, 0, 0, 11], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:40", "type":"resource", "data":[0.5, 1, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":40}]]}, {"name":"spMV_pipeline.cl:43", "type":"resource", "data":[11.5, 17.5, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":43}]]}, {"name":"spMV_pipeline.cl:49", "type":"resource", "data":[3, 0, 0, 0, 3], "debug":[[{"filename":"spMV_pipeline.cl", "line":49}]]}, {"name":"spMV_pipeline.cl:50", "type":"resource", "data":[2, 0, 0, 0, 3], "debug":[[{"filename":"spMV_pipeline.cl", "line":50}]]}, {"name":"spMV_pipeline.cl:51", "type":"resource", "data":[0.5, 1, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":51}]]}, {"name":"spMV_pipeline.cl:60", "type":"resource", "data":[50, 48, 0, 0, 2], "debug":[[{"filename":"spMV_pipeline.cl", "line":60}]]}, {"name":"spMV_pipeline.cl:68", "type":"resource", "data":[50, 48, 0, 0, 2], "debug":[[{"filename":"spMV_pipeline.cl", "line":68}]]}, {"name":"spMV_pipeline.cl:75", "type":"resource", "data":[11.5, 17.5, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":75}]]}, {"name":"spMV_pipeline.cl:85", "type":"resource", "data":[1, 0, 0, 0, 1], "debug":[[{"filename":"spMV_pipeline.cl", "line":85}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[26, 21, 0, 0, 11], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[2, 1, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 1, 0, 0, 0]}]}, {"name":"spMV_pipeline.cl:40", "type":"resource", "data":[32, 32, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":40}]], "children":[{"name":"64-bit Select", "type":"resource", "count":1, "data":[32, 32, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:43", "type":"resource", "data":[26, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":43}]], "children":[{"name":"32-bit Select", "type":"resource", "count":2, "data":[26, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:50", "type":"resource", "data":[149, 1, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":50}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":12, "data":[7, 1, 0, 0, 0]}, {"name":"2-bit Select", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}, {"name":"65-bit Integer Add", "type":"resource", "count":1, "data":[65, 0, 0, 0, 0]}, {"name":"65-bit Integer Compare", "type":"resource", "count":1, "data":[22, 0, 0, 0, 0]}, {"name":"65-bit Select", "type":"resource", "count":2, "data":[52, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:51", "type":"resource", "data":[227, 252, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":51}]], "children":[{"name":"\'Convert Floating-point to 64-bit Unsigned Integer\' Function Call", "type":"resource", "count":1, "data":[175, 187, 0, 0, 0]}, {"name":"64-bit Select", "type":"resource", "count":1, "data":[32, 32, 0, 0, 0]}, {"name":"Channel Read", "type":"resource", "count":1, "data":[20, 33, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:54", "type":"resource", "data":[20, 33, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":54}]], "children":[{"name":"Channel Read", "type":"resource", "count":1, "data":[20, 33, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:57", "type":"resource", "data":[20, 33, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":57}]], "children":[{"name":"Channel Read", "type":"resource", "count":1, "data":[20, 33, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:60", "type":"resource", "data":[21, 33, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":60}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"Channel Read", "type":"resource", "count":1, "data":[20, 33, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:64", "type":"resource", "data":[21, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":64}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[21, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:65", "type":"resource", "data":[3, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":65}]], "children":[{"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:68", "type":"resource", "data":[401, 322.5, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":68}]], "children":[{"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call", "type":"resource", "count":1, "data":[394, 317, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":2, "data":[1, 0.5, 0, 0, 0]}, {"name":"Channel Write", "type":"resource", "count":1, "data":[6, 5, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:75", "type":"resource", "data":[26, 0, 0, 1, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":75}]], "children":[{"name":"32-bit Select", "type":"resource", "count":2, "data":[26, 0, 0, 0, 0]}, {"name":"Hardened Floating-Point Multiply-Add", "type":"resource", "count":1, "data":[0, 0, 0, 1, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:85", "type":"resource", "data":[1, 0.5, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":85}]], "children":[{"name":"1-bit Or", "type":"resource", "count":2, "data":[1, 0.5, 0, 0, 0]}], "replace_name":"true"}]}]}]}, {"name":"load", "compute_units":1, "type":"function", "total_percent":[2.63957, 1.59796, 1.17644, 5.67637, 0], "total_kernel_resources":[12913, 20103, 154, 0, 37], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1072, 2225, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:16)", "type":"resource", "data":[14, 51, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":16}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 11 and depth 1"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 11 width by 1 depth,\\n1 reg, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:21)", "type":"resource", "data":[46, 509, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":21}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 5 (depth was increased by a factor of 5 due to a loop initiation interval of 5.)"}, {"type":"text", "text":"1 register of width 65 and depth 5 (depth was increased by a factor of 5 due to a loop initiation interval of 5.)"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 5 depth,\\n1 reg, 65 width by 5 depth"}]}, {"name":"Private Variable: \\n - \'m\' (spMV_pipeline.cl:20)", "type":"resource", "data":[7, 15, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":20}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 11 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 11 width by 1 depth"}]}, {"name":"spMV_pipeline.cl:13 (x_seg)", "type":"resource", "data":[0, 0, 2, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":13}]], "details":[{"type":"table", "Private memory":"Stall-Free", "Requested size":"4096 bytes", "Implemented size":"4096 bytes", "Number of banks":"1", "Bank width":"32 bits", "Bank depth":"1024 words", "Total replication":"1", "Additional information":[{"type":"text", "text":"Requested size 4096 bytes, implemented size 4096 bytes, stall-free, 1 read and 1 write. "}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free,\\n4096B requested,\\n4096B implemented."}]}, {"name":"load.B0", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[8, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 2, 0, 0, 0]}]}]}, {"name":"load.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[1, 66, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"spMV_pipeline.cl:20", "type":"resource", "data":[1, 65, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":20}]]}, {"name":"spMV_pipeline.cl:21", "type":"resource", "data":[0, 1, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":21}]]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:20", "type":"resource", "data":[260, 65, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":20}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":1, "data":[64, 0, 0, 0, 0]}, {"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[67, 1, 0, 0, 0]}, {"name":"64-bit Select", "type":"resource", "count":1, "data":[64, 64, 0, 0, 0]}, {"name":"65-bit Integer Add", "type":"resource", "count":1, "data":[65, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:21", "type":"resource", "data":[21, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":21}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[21, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"load.B2", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[93, 169, 4, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[93, 169, 4, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[82, 232, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:16", "type":"resource", "data":[82, 232, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":16}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 7], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:16", "type":"resource", "data":[53, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":16}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"11-bit Integer Add", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"11-bit Integer Compare", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"4-bit Select", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:17", "type":"resource", "data":[538, 2074, 15, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":17}]], "children":[{"name":"Load", "type":"resource", "count":1, "data":[504, 2050, 15, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}, {"name":"Store", "type":"resource", "count":1, "data":[34, 24, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"spMV_pipeline.cl", "line":"13"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}]}]}, {"name":"load.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[1, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[1, 2, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[16, 9, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:20", "type":"resource", "data":[8, 7, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":20}]]}, {"name":"spMV_pipeline.cl:31", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":31}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[5, 3, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:20", "type":"resource", "data":[15, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":20}]], "children":[{"name":"11-bit Integer Add", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"11-bit Integer Compare", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"load.B4", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:36", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":36}]]}]}]}, {"name":"load.B5", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[27, 19, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:31", "type":"resource", "data":[27, 19, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":31}]]}]}]}, {"name":"load.B6", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[306, 530, 7, 0, 2], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[306, 530, 7, 0, 2]}]}, {"name":"Feedback", "type":"resource", "data":[193, 457, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:20", "type":"resource", "data":[48, 34, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":20}]]}, {"name":"spMV_pipeline.cl:21", "type":"resource", "data":[96, 388, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":21}]]}, {"name":"spMV_pipeline.cl:31", "type":"resource", "data":[49, 35, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":31}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[27, 19, 0, 0, 17], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:21", "type":"resource", "data":[183, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":21}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":17, "data":[9, 0, 0, 0, 0]}, {"name":"2-bit Select", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"65-bit Integer Add", "type":"resource", "count":1, "data":[65, 0, 0, 0, 0]}, {"name":"65-bit Integer Compare", "type":"resource", "count":1, "data":[22, 0, 0, 0, 0]}, {"name":"65-bit Select", "type":"resource", "count":1, "data":[52, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:22", "type":"resource", "data":[3429, 4650, 42, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":22}]], "children":[{"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call", "type":"resource", "count":1, "data":[394, 317, 0, 0, 0]}, {"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[3032, 4331, 42, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:25", "type":"resource", "data":[3429, 4650, 42, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":25}]], "children":[{"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call", "type":"resource", "count":1, "data":[394, 317, 0, 0, 0]}, {"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[3032, 4331, 42, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:28", "type":"resource", "data":[3043, 4301, 42, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":28}]], "children":[{"name":"Channel Write", "type":"resource", "count":1, "data":[3, 2, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[3040, 4299, 42, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:31", "type":"resource", "data":[33, 43, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":31}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"Channel Write", "type":"resource", "count":1, "data":[6, 2, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[26, 41, 0, 0, 0], "details":[{"type":"text", "text":"Load uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on %L.", "links":[{"filename":"spMV_pipeline.cl", "line":"13"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}]}]}]}, {"name":"store", "compute_units":1, "type":"function", "total_percent":[2.51569, 1.53593, 1.11131, 1.58496, 0], "total_kernel_resources":[8763, 18990, 43, 0, 218], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:105)", "type":"resource", "data":[7, 36, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":105}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 1 (depth was increased by a factor of 15 due to a loop initiation interval of 15.)"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:95)", "type":"resource", "data":[42, 205, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":95}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32 and depth 4 (depth was increased by a factor of 134 due to a loop initiation interval of 134.)"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width by 4 depth"}]}, {"name":"Private Variable: \\n - \'m\' (spMV_pipeline.cl:93)", "type":"resource", "data":[7, 15, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":93}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 11 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 11 width by 1 depth"}]}, {"name":"store.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[32, 64, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[32, 64, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[8, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:93", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":93}]]}]}]}, {"name":"store.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[194, 453, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[194, 453, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[31, 79, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 68, 0, 0, 0]}, {"name":"spMV_pipeline.cl:106", "type":"resource", "data":[7, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":106}]]}, {"name":"spMV_pipeline.cl:93", "type":"resource", "data":[8, 7, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":93}]]}, {"name":"spMV_pipeline.cl:97", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":97}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[6, 4, 0, 0, 4], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:93", "type":"resource", "data":[15, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":93}]], "children":[{"name":"11-bit Integer Add", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"11-bit Integer Compare", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"store.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:124", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":124}]]}]}]}, {"name":"store.B3", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[454, 586, 19, 0, 1], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[454, 586, 19, 0, 1]}]}, {"name":"Feedback", "type":"resource", "data":[266, 829, 0, 0, 1], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[16, 136, 0, 0, 0]}, {"name":"spMV_pipeline.cl:106", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":106}]]}, {"name":"spMV_pipeline.cl:114", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":114}]]}, {"name":"spMV_pipeline.cl:93", "type":"resource", "data":[24, 15, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":93}]]}, {"name":"spMV_pipeline.cl:95", "type":"resource", "data":[202, 663, 0, 0, 1], "debug":[[{"filename":"spMV_pipeline.cl", "line":95}]]}, {"name":"spMV_pipeline.cl:97", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":97}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[44, 26, 0, 0, 9], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:95", "type":"resource", "data":[88.3333, 4, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":95}]], "children":[{"name":"1-bit And", "type":"resource", "count":3, "data":[2, 1, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":3, "data":[1.33333, 0, 0, 0, 0]}, {"name":"17-bit Select", "type":"resource", "count":1, "data":[14, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}, {"name":"Iteration Initiation", "type":"resource", "count":1, "data":[4, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:96", "type":"resource", "data":[550.833, 2050.5, 15, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":96}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.333333, 0, 0, 0, 0]}, {"name":"1-bit Xor", "type":"resource", "count":1, "data":[0.5, 0.5, 0, 0, 0]}, {"name":"32-bit Floating-point Compare", "type":"resource", "count":1, "data":[46, 0, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[504, 2050, 15, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:97", "type":"resource", "data":[400.333, 2216.5, 1, 0, 31], "debug":[[{"filename":"spMV_pipeline.cl", "line":97}]], "children":[{"name":"1-bit Or", "type":"resource", "count":2, "data":[0.833333, 0, 0, 0, 0]}, {"name":"1-bit Xor", "type":"resource", "count":1, "data":[0.5, 0.5, 0, 0, 0]}, {"name":"Store", "type":"resource", "count":1, "data":[399, 2216, 1, 0, 31], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:98", "type":"resource", "data":[1295, 2057, 1, 0, 31], "debug":[[{"filename":"spMV_pipeline.cl", "line":98}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[1295, 2057, 1, 0, 31], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:106", "type":"resource", "data":[0.5, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":106}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.5, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"store.B4", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[476, 751, 5, 0, 18], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[476, 751, 5, 0, 18]}]}, {"name":"Feedback", "type":"resource", "data":[214, 465, 0, 0, 1], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[16, 136, 0, 0, 0]}, {"name":"spMV_pipeline.cl:105", "type":"resource", "data":[127, 284, 0, 0, 1], "debug":[[{"filename":"spMV_pipeline.cl", "line":105}]]}, {"name":"spMV_pipeline.cl:114", "type":"resource", "data":[55, 35, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":114}]]}, {"name":"spMV_pipeline.cl:93", "type":"resource", "data":[16, 10, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":93}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[51, 31, 0, 0, 19], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"spMV_pipeline.cl:105", "type":"resource", "data":[85.5, 3, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":105}]], "children":[{"name":"1-bit And", "type":"resource", "count":4, "data":[3, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":3, "data":[1.5, 0, 0, 0, 0]}, {"name":"12-bit Select", "type":"resource", "count":1, "data":[10, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[35, 1, 0, 0, 0]}, {"name":"Iteration Initiation", "type":"resource", "count":1, "data":[4, 2, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:106", "type":"resource", "data":[419, 2249, 1, 0, 31], "debug":[[{"filename":"spMV_pipeline.cl", "line":106}]], "children":[{"name":"Channel Read", "type":"resource", "count":1, "data":[20, 33, 0, 0, 0]}, {"name":"Store", "type":"resource", "count":1, "data":[399, 2216, 1, 0, 31], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:109", "type":"resource", "data":[108.5, 4, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":109}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[0.5, 0, 0, 0, 0]}, {"name":"32-bit Floating-point Compare", "type":"resource", "count":1, "data":[108, 4, 0, 0, 0]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:114", "type":"resource", "data":[579, 2460, 1, 0, 31], "debug":[[{"filename":"spMV_pipeline.cl", "line":114}]], "children":[{"name":"\'Convert Floating-point to 64-bit Unsigned Integer\' Function Call", "type":"resource", "count":1, "data":[175, 187, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"Channel Read", "type":"resource", "count":1, "data":[20, 33, 0, 0, 0]}, {"name":"Store", "type":"resource", "count":1, "data":[383, 2240, 1, 0, 31], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"spMV_pipeline.cl:117", "type":"resource", "data":[21, 0, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":117}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[21, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"store.B5", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[97, 194, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[97, 194, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[35, 21, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:114", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":114}]]}, {"name":"spMV_pipeline.cl:97", "type":"resource", "data":[27, 19, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":97}]]}]}]}, {"name":"store.B6", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[6, 6, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[6, 6, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[54, 38, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"spMV_pipeline.cl:106", "type":"resource", "data":[27, 19, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":106}]]}, {"name":"spMV_pipeline.cl:114", "type":"resource", "data":[27, 19, 0, 0, 0], "debug":[[{"filename":"spMV_pipeline.cl", "line":114}]]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}]}, {"name":"spMV_pipeline.cl:118", "type":"resource", "data":[1832, 1722, 0, 0, 31], "debug":[[{"filename":"spMV_pipeline.cl", "line":118}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[1791, 1461, 0, 0, 31], "details":[{"type":"text", "text":"Store to global memory that implements printf functionality. printf is a debug tool that may slow down overall system performance. Remove from production code."}, {"type":"brief", "text":"Store to global memory that implements printf functionality."}]}, {"name":"llvm.fpga.printf", "type":"resource", "count":1, "data":[41, 261, 0, 0, 0]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"children":[{"children":[{"data":[134500,172452,397,0,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[4069,5395,61,0,0],"details":[{"text":"Global interconnect for 5 global loads and 5 global stores. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 5 global loads and 5 global stores.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[0,67,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[15,104,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":8}]],"details":[{"text":"Channel is implemented 32 bits wide by 1 deep.","type":"text"},{"text":"32b wide by 1 deep.","type":"brief"},{"text":"Requested depth was 0.","type":"text"},{"details":[{"text":"instruction scheduling requirements","type":"text"}],"text":"Channel depth was changed for the following reason:","type":"text"},{"links":[{"guide":"Best Practices Guide : Channels","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}],"text":"See %L for more information","type":"text"}],"name":"spMV_pipeline.cl:8 (c0)","type":"resource"},{"data":[15,104,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":8}]],"details":[{"text":"Channel is implemented 32 bits wide by 1 deep.","type":"text"},{"text":"32b wide by 1 deep.","type":"brief"},{"text":"Requested depth was 0.","type":"text"},{"details":[{"text":"instruction scheduling requirements","type":"text"}],"text":"Channel depth was changed for the following reason:","type":"text"},{"links":[{"guide":"Best Practices Guide : Channels","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}],"text":"See %L for more information","type":"text"}],"name":"spMV_pipeline.cl:8 (c1)","type":"resource"}],"data":[30,208,0,0,0],"name":"Pipe and channel resources","type":"group"},{"children":[{"data":[258,221,0,0,25],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[0,0,0,0,4],"details":[{"text":"Type: Shift Register (1 or fewer tap point)","type":"text"},{"text":"1 register of width 64 and depth 12 (depth was increased by a factor of 12 due to a loop initiation interval of 12.)","type":"text"},{"text":"Shift Register,\\n1 reg, 64 width by 12 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'row_prev\' (spMV_pipeline.cl:40)\\n - \'row_curr\' (spMV_pipeline.cl:40)","type":"resource"},{"data":[0,0,0,0,4],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 65 and depth 13 (depth was increased by a factor of 12 due to a loop initiation interval of 12.)","type":"text"},{"text":"Register,\\n1 reg, 65 width by 13 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:50)","type":"resource"},{"data":[7,15,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 11 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 11 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'m\' (spMV_pipeline.cl:49)","type":"resource"},{"data":[19,33,0,0,2],"details":[{"text":"Type: Shift Register (1 or fewer tap point)","type":"text"},{"text":"1 register of width 32 and depth 15 (depth was increased by a factor of 12 due to a loop initiation interval of 12.)","type":"text"},{"text":"Shift Register,\\n1 reg, 32 width by 15 depth","type":"brief"}],"name":"Private Variable: \\n - \'y_temp\' (spMV_pipeline.cl:43)","type":"resource"},{"children":[{"count":1,"data":[0,65,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"State","type":"resource"},{"count":1,"data":[64,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"64-bit Integer Add","type":"resource"},{"count":1,"data":[67,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[64,64,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"64-bit Select","type":"resource"},{"count":1,"data":[65,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"65-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"11-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"11-bit Integer Compare","type":"resource"}],"data":[275,130,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":49}]],"name":"spMV_pipeline.cl:49","type":"resource"},{"children":[{"count":1,"data":[2,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"State","type":"resource"},{"count":1,"data":[21,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"1-bit And","type":"resource"},{"count":12,"data":[7,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"2-bit Select","type":"resource"},{"count":1,"data":[65,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"65-bit Integer Add","type":"resource"},{"count":1,"data":[22,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"65-bit Integer Compare","type":"resource"},{"count":2,"data":[52,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"65-bit Select","type":"resource"}],"data":[172,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":50}]],"name":"spMV_pipeline.cl:50","type":"resource"},{"children":[{"count":3,"data":[425,535,0,0,18],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[1,1,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit Or","type":"resource"}],"data":[427,536,0,0,18],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":79}]],"name":"Channel Write","type":"resource"}],"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":79}]],"name":"spMV_pipeline.cl:79","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[394,317,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":82}]],"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call","type":"resource"},{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":82}]],"name":"Channel Write","type":"resource"}],"data":[397,319,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":82}]],"name":"spMV_pipeline.cl:82","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[5,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":85}]],"name":"Channel Write","type":"resource"},{"count":2,"data":[1,0.5,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":85}]],"name":"1-bit Or","type":"resource"}],"data":[6,2.5,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":85}]],"name":"spMV_pipeline.cl:85","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,32,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":40}]],"name":"64-bit Select","type":"resource"}],"data":[32,32,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":40}]],"name":"spMV_pipeline.cl:40","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[26,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":43}]],"name":"32-bit Select","type":"resource"}],"data":[26,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":43}]],"name":"spMV_pipeline.cl:43","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[175,187,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":51}]],"name":"\'Convert Floating-point to 64-bit Unsigned Integer\' Function Call","type":"resource"},{"count":1,"data":[32,32,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":51}]],"name":"64-bit Select","type":"resource"},{"count":1,"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":51}]],"name":"Channel Read","type":"resource"}],"data":[227,252,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":51}]],"name":"spMV_pipeline.cl:51","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":54}]],"name":"Channel Read","type":"resource"}],"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":54}]],"name":"spMV_pipeline.cl:54","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":57}]],"name":"Channel Read","type":"resource"}],"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":57}]],"name":"spMV_pipeline.cl:57","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":60}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":60}]],"name":"Channel Read","type":"resource"}],"data":[21,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":60}]],"name":"spMV_pipeline.cl:60","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[21,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":64}]],"name":"64-bit Integer Compare","type":"resource"}],"data":[21,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":64}]],"name":"spMV_pipeline.cl:64","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":65}]],"name":"Channel Write","type":"resource"}],"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":65}]],"name":"spMV_pipeline.cl:65","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[394,317,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":68}]],"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call","type":"resource"},{"count":2,"data":[1,0.5,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":68}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[6,5,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":68}]],"name":"Channel Write","type":"resource"}],"data":[401,322.5,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":68}]],"name":"spMV_pipeline.cl:68","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[26,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":75}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[0,0,0,1,0],"debug":[[{"filename":"spMV_pipeline.cl","line":75}]],"name":"Hardened Floating-Point Multiply-Add","type":"resource"}],"data":[26,0,0,1,0],"debug":[[{"filename":"spMV_pipeline.cl","line":75}]],"name":"spMV_pipeline.cl:75","replace_name":"true","type":"resource"}],"compute_units":1,"data":[3699,4379,0,1,63],"debug":[[{"filename":"spMV_pipeline.cl","line":40}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"execute","total_kernel_resources":[3699,4379,0,1,63],"total_percent":[0.770591,0.580407,0.256262,0,0.0658762],"type":"function"},{"children":[{"data":[369,753,0,0,25],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1072,2225,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[14,51,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 11 and depth 1","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 11 width by 1 depth,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:16)","type":"resource"},{"data":[46,509,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 5 (depth was increased by a factor of 5 due to a loop initiation interval of 5.)","type":"text"},{"text":"1 register of width 65 and depth 5 (depth was increased by a factor of 5 due to a loop initiation interval of 5.)","type":"text"},{"text":"Register,\\n1 reg, 32 width by 5 depth,\\n1 reg, 65 width by 5 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:21)","type":"resource"},{"data":[7,15,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 11 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 11 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'m\' (spMV_pipeline.cl:20)","type":"resource"},{"data":[0,0,2,0,0],"details":[{"Additional information":[{"text":"Requested size 4096 bytes, implemented size 4096 bytes, stall-free, 1 read and 1 write. ","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"1024 words","Bank width":"32 bits","Implemented size":"4096 bytes","Number of banks":1,"Private memory":"Stall-Free","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"4096 bytes","Total replication":1,"type":"table"},{"text":"Stall-Free,\\n4096B requested,\\n4096B implemented.","type":"brief"}],"name":"spMV_pipeline.cl:13 (x_seg)","type":"resource"},{"children":[{"count":1,"data":[1,65,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"State","type":"resource"},{"count":1,"data":[64,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"64-bit Integer Add","type":"resource"},{"count":1,"data":[67,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[64,64,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"64-bit Select","type":"resource"},{"count":1,"data":[65,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"65-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"11-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"11-bit Integer Compare","type":"resource"}],"data":[276,130,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":20}]],"name":"spMV_pipeline.cl:20","type":"resource"},{"children":[{"count":1,"data":[0,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"State","type":"resource"},{"count":1,"data":[21,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"1-bit And","type":"resource"},{"count":17,"data":[9,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"2-bit Select","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[65,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"65-bit Integer Add","type":"resource"},{"count":1,"data":[22,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"65-bit Integer Compare","type":"resource"},{"count":1,"data":[52,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"65-bit Select","type":"resource"}],"data":[204,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":21}]],"name":"spMV_pipeline.cl:21","type":"resource"},{"children":[{"count":3,"data":[400,701,11,0,2],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[400,701,11,0,2],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":16}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":16}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":16}]],"name":"11-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":16}]],"name":"11-bit Integer Compare","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":16}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":16}]],"name":"4-bit Select","type":"resource"}],"data":[53,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":16}]],"name":"spMV_pipeline.cl:16","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[504,2050,15,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":17}]],"name":"Load","type":"resource"},{"count":1,"data":[34,24,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":17}]],"name":"Store","type":"resource"}],"data":[538,2074,15,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":17}]],"name":"spMV_pipeline.cl:17","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[394,317,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":22}]],"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call","type":"resource"},{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":22}]],"name":"Channel Write","type":"resource"},{"count":1,"data":[3032,4331,42,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":22}]],"name":"Load","type":"resource"}],"data":[3429,4650,42,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":22}]],"name":"spMV_pipeline.cl:22","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[394,317,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":25}]],"name":"\'Convert 64-bit Unsigned Integer to Floating-point\' Function Call","type":"resource"},{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":25}]],"name":"Channel Write","type":"resource"},{"count":1,"data":[3032,4331,42,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":25}]],"name":"Load","type":"resource"}],"data":[3429,4650,42,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":25}]],"name":"spMV_pipeline.cl:25","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[3,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":28}]],"name":"Channel Write","type":"resource"},{"count":1,"data":[3040,4299,42,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":28}]],"name":"Load","type":"resource"}],"data":[3043,4301,42,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":28}]],"name":"spMV_pipeline.cl:28","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":31}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[6,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":31}]],"name":"Channel Write","type":"resource"},{"count":1,"data":[26,41,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":31}]],"name":"Load","type":"resource"}],"data":[33,43,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":31}]],"name":"spMV_pipeline.cl:31","replace_name":"true","type":"resource"}],"compute_units":1,"data":[12913,20103,154,0,37],"debug":[[{"filename":"spMV_pipeline.cl","line":13}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"load","total_kernel_resources":[12913,20103,154,0,37],"total_percent":[2.63957,1.59796,1.17644,5.67637,0],"type":"function"},{"children":[{"data":[714,1503,0,0,34],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[7,36,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 1 (depth was increased by a factor of 15 due to a loop initiation interval of 15.)","type":"text"},{"text":"Register,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:105)","type":"resource"},{"data":[42,205,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32 and depth 4 (depth was increased by a factor of 134 due to a loop initiation interval of 134.)","type":"text"},{"text":"Register,\\n1 reg, 32 width by 4 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (spMV_pipeline.cl:95)","type":"resource"},{"data":[7,15,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 11 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 11 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'m\' (spMV_pipeline.cl:93)","type":"resource"},{"children":[{"count":6,"data":[1259,2054,24,0,19],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit Or","type":"resource"}],"data":[1260,2054,24,0,19],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":93}]],"name":"11-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":93}]],"name":"11-bit Integer Compare","type":"resource"}],"data":[15,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":93}]],"name":"spMV_pipeline.cl:93","replace_name":"true","type":"resource"},{"children":[{"count":3,"data":[2,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":95}]],"name":"1-bit And","type":"resource"},{"count":3,"data":[1.33333,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":95}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[14,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":95}]],"name":"17-bit Select","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":95}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":95}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[4,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":95}]],"name":"Iteration Initiation","type":"resource"}],"data":[88.3333,4,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":95}]],"name":"spMV_pipeline.cl:95","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[0.333333,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":96}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[0.5,0.5,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":96}]],"name":"1-bit Xor","type":"resource"},{"count":1,"data":[46,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":96}]],"name":"32-bit Floating-point Compare","type":"resource"},{"count":1,"data":[504,2050,15,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":96}]],"name":"Load","type":"resource"}],"data":[550.833,2050.5,15,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":96}]],"name":"spMV_pipeline.cl:96","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[0.833333,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":97}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[0.5,0.5,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":97}]],"name":"1-bit Xor","type":"resource"},{"count":1,"data":[399,2216,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":97}]],"name":"Store","type":"resource"}],"data":[400.333,2216.5,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":97}]],"name":"spMV_pipeline.cl:97","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1295,2057,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":98}]],"name":"Store","type":"resource"}],"data":[1295,2057,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":98}]],"name":"spMV_pipeline.cl:98","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[0.5,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":106}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":106}]],"name":"Channel Read","type":"resource"},{"count":1,"data":[399,2216,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":106}]],"name":"Store","type":"resource"}],"data":[419.5,2249,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":106}]],"name":"spMV_pipeline.cl:106","replace_name":"true","type":"resource"},{"children":[{"count":4,"data":[3,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":105}]],"name":"1-bit And","type":"resource"},{"count":3,"data":[1.5,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":105}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[10,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":105}]],"name":"12-bit Select","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":105}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[35,1,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":105}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[4,2,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":105}]],"name":"Iteration Initiation","type":"resource"}],"data":[85.5,3,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":105}]],"name":"spMV_pipeline.cl:105","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[0.5,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":109}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[108,4,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":109}]],"name":"32-bit Floating-point Compare","type":"resource"}],"data":[108.5,4,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":109}]],"name":"spMV_pipeline.cl:109","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[175,187,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":114}]],"name":"\'Convert Floating-point to 64-bit Unsigned Integer\' Function Call","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":114}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[20,33,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":114}]],"name":"Channel Read","type":"resource"},{"count":1,"data":[383,2240,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":114}]],"name":"Store","type":"resource"}],"data":[579,2460,1,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":114}]],"name":"spMV_pipeline.cl:114","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[21,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":117}]],"name":"64-bit Integer Compare","type":"resource"}],"data":[21,0,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":117}]],"name":"spMV_pipeline.cl:117","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1791,1461,0,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":118}]],"name":"Store","type":"resource"},{"count":1,"data":[41,261,0,0,0],"debug":[[{"filename":"spMV_pipeline.cl","line":118}]],"name":"llvm.fpga.printf","type":"resource"}],"data":[1832,1722,0,0,31],"debug":[[{"filename":"spMV_pipeline.cl","line":118}]],"name":"spMV_pipeline.cl:118","replace_name":"true","type":"resource"}],"compute_units":1,"data":[8762.9993,18990,43,0,218],"debug":[[{"filename":"spMV_pipeline.cl","line":93}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"store","total_kernel_resources":[8763,18990,43,0,218],"total_percent":[2.51569,1.53593,1.11131,1.58496,0],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[29473.9993,49142,260,1,318],"debug_enabled":"true","max_resources":[854400,1708800,2713,1518,42720],"name":"Kernel System","total":[163974,221594,657,1,318],"total_percent":[31.0508,19.9361,12.9678,24.2167,0.0658762],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"execute", "children":[{"type":"bb", "id":3, "name":"execute.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":4, "name":"execute.B1", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"20"}]}, {"type":"bb", "id":5, "name":"execute.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":6, "name":"execute.B3", "children":[{"type":"inst", "id":8, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":79}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"0", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":10, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":82}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"8", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":11, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"9", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":19, "name":"Begin", "details":[{"type":"table", "Start Cycle":"0", "Latency":"1"}]}, {"type":"inst", "id":20, "name":"End", "details":[{"type":"table", "Start Cycle":"9", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"9", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":7, "name":"execute.B4", "children":[{"type":"inst", "id":12, "name":"Channel Read", "debug":[[{"filename":"spMV_pipeline.cl", "line":51}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"0", "Stall-free":"No", "Start Cycle":"16", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":14, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":65}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"26", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":15, "name":"Channel Read", "debug":[[{"filename":"spMV_pipeline.cl", "line":54}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"0", "Stall-free":"No", "Start Cycle":"17", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":16, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":68}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"27", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":17, "name":"Channel Read", "debug":[[{"filename":"spMV_pipeline.cl", "line":57}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"0", "Stall-free":"No", "Start Cycle":"24", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":18, "name":"Channel Read", "debug":[[{"filename":"spMV_pipeline.cl", "line":60}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"25", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":21, "name":"Loop Input", "debug":[[{"filename":"spMV_pipeline.cl", "line":50}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"22"}]}, {"type":"inst", "id":22, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"34", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"34", "II":"12", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Loop is pipelined with II of 12. See Loops Analysis for more information."}]}]}, {"type":"kernel", "id":23, "name":"load", "children":[{"type":"bb", "id":24, "name":"load.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":25, "name":"load.B1", "details":[{"type":"table", "Latency":"1"}]}, {"type":"bb", "id":26, "name":"load.B2", "children":[{"type":"inst", "id":31, "name":"Load", "debug":[[{"filename":"spMV_pipeline.cl", "line":17}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"6", "Latency":"128", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":32, "name":"Store", "debug":[[{"filename":"spMV_pipeline.cl", "line":17}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"x_seg", "Start Cycle":"135", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":41, "name":"Loop Input", "debug":[[{"filename":"spMV_pipeline.cl", "line":16}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"42"}]}, {"type":"inst", "id":42, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"136", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"136", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":27, "name":"load.B3", "details":[{"type":"table", "Latency":"5", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"29"}]}, {"type":"bb", "id":28, "name":"load.B4", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":29, "name":"load.B5", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":30, "name":"load.B6", "children":[{"type":"inst", "id":33, "name":"Load", "debug":[[{"filename":"spMV_pipeline.cl", "line":22}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"8", "Latency":"149", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":34, "name":"Load", "debug":[[{"filename":"spMV_pipeline.cl", "line":25}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"8", "Latency":"149", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":35, "name":"Load", "debug":[[{"filename":"spMV_pipeline.cl", "line":28}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"8", "Latency":"128", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":36, "name":"Load", "debug":[[{"filename":"spMV_pipeline.cl", "line":31}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"x_seg", "Start Cycle":"159", "Latency":"3", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":37, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":22}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"166", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":38, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":25}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"167", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":39, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":28}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"168", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":40, "name":"Channel Write", "debug":[[{"filename":"spMV_pipeline.cl", "line":31}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"169", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":43, "name":"Loop Input", "debug":[[{"filename":"spMV_pipeline.cl", "line":21}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"44"}]}, {"type":"inst", "id":44, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"169", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"169", "II":"5", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Loop is pipelined with II of 5. See Loops Analysis for more information."}]}, {"type":"memtype", "id":45, "name":"Local Memory", "children":[{"type":"memsys", "id":46, "name":"x_seg", "debug":[[{"filename":"spMV_pipeline.cl", "line":13}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"4096B requested\\n4096B implemented"}], "Requested size":"4096 bytes", "Implemented size":"4096 bytes", "Number of banks":"1", "Bank width":"32 bits", "Bank depth":"1024 words", "Total replication":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}]}]}, {"type":"kernel", "id":51, "name":"store", "children":[{"type":"bb", "id":52, "name":"store.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":53, "name":"store.B1", "details":[{"type":"table", "Latency":"6", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"72"}]}, {"type":"bb", "id":54, "name":"store.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":55, "name":"store.B3", "children":[{"type":"inst", "id":59, "name":"Load", "debug":[[{"filename":"spMV_pipeline.cl", "line":96}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"139", "Latency":"128", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":60, "name":"Store", "debug":[[{"filename":"spMV_pipeline.cl", "line":97}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"272", "Latency":"32", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":61, "name":"Store", "debug":[[{"filename":"spMV_pipeline.cl", "line":98}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"272", "Latency":"32", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":67, "name":"Loop Input", "debug":[[{"filename":"spMV_pipeline.cl", "line":95}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"68"}]}, {"type":"inst", "id":68, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"304", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"304", "II":"134", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Loop is pipelined with II of 134. See Loops Analysis for more information."}]}, {"type":"bb", "id":56, "name":"store.B4", "children":[{"type":"inst", "id":62, "name":"Channel Read", "debug":[[{"filename":"spMV_pipeline.cl", "line":106}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"0", "Stall-free":"No", "Start Cycle":"10", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":63, "name":"Channel Read", "debug":[[{"filename":"spMV_pipeline.cl", "line":114}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1", "Stall-free":"No", "Start Cycle":"15", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#qah1476410829821"}]}]}]}, {"type":"inst", "id":64, "name":"Store", "debug":[[{"filename":"spMV_pipeline.cl", "line":106}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"24", "Latency":"32", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":65, "name":"Store", "debug":[[{"filename":"spMV_pipeline.cl", "line":114}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"24", "Latency":"32", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":69, "name":"Loop Input", "debug":[[{"filename":"spMV_pipeline.cl", "line":105}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"70"}]}, {"type":"inst", "id":70, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"56", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"56", "II":"15", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Loop is pipelined with II of 15. See Loops Analysis for more information."}]}, {"type":"bb", "id":57, "name":"store.B5", "details":[{"type":"table", "Latency":"1"}]}, {"type":"bb", "id":58, "name":"store.B6", "children":[{"type":"inst", "id":66, "name":"Store", "debug":[[{"filename":"spMV_pipeline.cl", "line":118}]], "details":[{"type":"table", "Width":"256 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"2", "Latency":"2", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":71, "name":"Begin", "details":[{"type":"table", "Start Cycle":"0", "Latency":"1"}]}, {"type":"inst", "id":72, "name":"End", "details":[{"type":"table", "Start Cycle":"4", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"4", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":50, "name":"DDR", "details":[{"type":"table", "Number of banks":"2"}]}]}, {"type":"channel", "id":13, "name":"c0", "debug":[[{"filename":"spMV_pipeline.cl", "line":38}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"0"}]}, {"type":"channel", "id":9, "name":"c1", "debug":[[{"filename":"spMV_pipeline.cl", "line":38}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"1"}]}], "links":[{"from":8, "to":9}, {"from":10, "to":9}, {"from":11, "to":9}, {"from":13, "to":12}, {"from":14, "to":9}, {"from":13, "to":15}, {"from":16, "to":9}, {"from":13, "to":17}, {"from":13, "to":18}, {"from":20, "to":4}, {"from":3, "to":4}, {"from":20, "to":5}, {"from":22, "to":19}, {"from":8, "to":20}, {"from":10, "to":20}, {"from":11, "to":20}, {"from":22, "to":21}, {"from":4, "to":21}, {"from":12, "to":22}, {"from":14, "to":22}, {"from":15, "to":22}, {"from":16, "to":22}, {"from":17, "to":22}, {"from":18, "to":22}, {"from":19, "to":8}, {"from":8, "to":10}, {"from":10, "to":11}, {"from":21, "to":12}, {"from":12, "to":14}, {"from":12, "to":15}, {"from":12, "to":16}, {"from":14, "to":16}, {"from":15, "to":17}, {"from":17, "to":18}, {"from":37, "to":13}, {"from":38, "to":13}, {"from":39, "to":13}, {"from":40, "to":13}, {"from":46, "to":36}, {"from":32, "to":46}, {"from":42, "to":25}, {"from":42, "to":41}, {"from":24, "to":41}, {"from":31, "to":42}, {"from":32, "to":42}, {"from":29, "to":27}, {"from":25, "to":27}, {"from":29, "to":28}, {"from":44, "to":29}, {"from":44, "to":43}, {"from":27, "to":43}, {"from":37, "to":44}, {"from":38, "to":44}, {"from":39, "to":44}, {"from":40, "to":44}, {"from":33, "to":44}, {"from":34, "to":44}, {"from":35, "to":44}, {"from":36, "to":44}, {"from":41, "to":31}, {"from":31, "to":32}, {"from":43, "to":33}, {"from":43, "to":34}, {"from":43, "to":35}, {"from":34, "to":36}, {"from":33, "to":37}, {"from":34, "to":38}, {"from":37, "to":38}, {"from":35, "to":39}, {"from":38, "to":39}, {"from":36, "to":40}, {"from":39, "to":40}, {"from":50, "to":31}, {"from":50, "to":33}, {"from":50, "to":34}, {"from":50, "to":35}, {"from":9, "to":62}, {"from":9, "to":63}, {"from":72, "to":53}, {"from":52, "to":53}, {"from":72, "to":54}, {"from":68, "to":67}, {"from":53, "to":67}, {"from":59, "to":68}, {"from":60, "to":68}, {"from":61, "to":68}, {"from":70, "to":69}, {"from":57, "to":69}, {"from":62, "to":70}, {"from":63, "to":70}, {"from":64, "to":70}, {"from":65, "to":70}, {"from":68, "to":57}, {"from":70, "to":71}, {"from":66, "to":72}, {"from":67, "to":59}, {"from":59, "to":60}, {"from":59, "to":61}, {"from":69, "to":62}, {"from":62, "to":63}, {"from":62, "to":64}, {"from":63, "to":64}, {"from":62, "to":65}, {"from":63, "to":65}, {"from":71, "to":66}, {"from":50, "to":59}, {"from":65, "to":50}, {"from":66, "to":50}, {"from":60, "to":50}, {"from":61, "to":50}, {"from":64, "to":50}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: execute", "data":["", "", ""], "debug":[[{"filename":"spMV_pipeline.cl", "line":38}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"execute.B1", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"spMV_pipeline.cl", "line":49}]], "details":[{"type":"brief", "text":"Serial exe: Memory dependency"}, {"type":"text", "text":"Iteration executed serially across execute.B4. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"51"}]}, {"type":"text", "text":"To: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"68"}]}]}, {"type":"text", "text":"Iteration executed serially across execute.B4. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"65"}]}, {"type":"text", "text":"To: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"68"}]}]}, {"type":"text", "text":"Iteration executed serially due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"65"}]}, {"type":"text", "text":"To: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"85"}]}]}, {"type":"text", "text":"Iteration executed serially across execute.B4. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"79"}]}, {"type":"text", "text":"To: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"85"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"execute.B4", "data":["Yes", "~12", "1"], "debug":[[{"filename":"spMV_pipeline.cl", "line":50}]], "details":[{"type":"brief", "text":"Memory dependency"}, {"type":"text", "text":"Compiler failed to schedule this loop with smaller II due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"51"}]}, {"type":"text", "text":"To: Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"60"}]}]}, {"type":"text", "text":"Compiler failed to schedule this loop with smaller II due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"65"}]}, {"type":"text", "text":"To: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"68"}]}]}, {"type":"text", "text":"Compiler failed to schedule this loop with smaller II due to data dependency on variable(s):", "details":[{"type":"text", "text":"row_curr (%L)", "links":[{"filename":"Unknown location", "line":"0"}]}, {"type":"text", "text":"row_prev (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"40"}]}]}, {"type":"text", "text":"Most critical loop feedback path during scheduling:", "details":[{"type":"text", "text":"5.00 clock cycles \'Convert 64-bit Unsigned Integer to Floating-point\' Function Call Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"68"}]}]}, {"type":"text", "text":"Compiler failed to schedule this loop with smaller II due to data dependency on variable(s):", "details":[{"type":"text", "text":"row_curr (%L)", "links":[{"filename":"Unknown location", "line":"0"}]}, {"type":"text", "text":"row_prev (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"40"}]}]}, {"type":"text", "text":"Most critical loop feedback path during scheduling:", "details":[{"type":"text", "text":"5.00 clock cycles \'Convert 64-bit Unsigned Integer to Floating-point\' Function Call Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"68"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"51"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"65"}]}, {"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"54"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"68"}]}, {"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"57"}]}, {"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"60"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}, {"name":"Kernel: load", "data":["", "", ""], "debug":[[{"filename":"spMV_pipeline.cl", "line":10}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"load.B2", "data":["Yes", "~1", "3"], "debug":[[{"filename":"spMV_pipeline.cl", "line":16}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instruction:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"17"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}, {"name":"load.B3", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"spMV_pipeline.cl", "line":20}]], "details":[{"type":"brief", "text":"Serial exe: Memory dependency"}, {"type":"text", "text":"Iteration executed serially across load.B6. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"22"}]}, {"type":"text", "text":"To: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"31"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"load.B6", "data":["Yes", "~5", "1"], "debug":[[{"filename":"spMV_pipeline.cl", "line":21}]], "details":[{"type":"brief", "text":"Memory dependency"}, {"type":"text", "text":"Compiler failed to schedule this loop with smaller II due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"22"}]}, {"type":"text", "text":"To: Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"31"}]}]}, {"type":"text", "text":"Most critical loop feedback path during scheduling:", "details":[{"type":"text", "text":"0.28 clock cycles 1-bit Or Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"31"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"22"}]}, {"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"25"}]}, {"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"28"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"22"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"25"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"28"}]}, {"type":"text", "text":"Channel Write Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"31"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}, {"name":"Kernel: store", "data":["", "", ""], "debug":[[{"filename":"spMV_pipeline.cl", "line":91}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"store.B1", "data":["Yes", ">=1", "0"], "debug":[[{"filename":"spMV_pipeline.cl", "line":93}]], "details":[{"type":"brief", "text":"Serial exe: Memory dependency"}, {"type":"text", "text":"Iteration executed serially across store.B3. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"96"}]}, {"type":"text", "text":"To: Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"97"}]}]}, {"type":"text", "text":"Iteration executed serially across store.B3, store.B4. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"96"}]}, {"type":"text", "text":"To: Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}]}, {"type":"text", "text":"Iteration executed serially across store.B3, store.B4. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"97"}]}, {"type":"text", "text":"To: Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}]}, {"type":"text", "text":"Iteration executed serially across store.B3, store.B4. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"98"}]}, {"type":"text", "text":"To: Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}]}, {"type":"text", "text":"Iteration executed serially across store.B4. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}, {"type":"text", "text":"To: Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"114"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"store.B3", "data":["Yes", "~134", "16"], "debug":[[{"filename":"spMV_pipeline.cl", "line":95}]], "details":[{"type":"brief", "text":"Data dependency"}, {"type":"text", "text":"Most critical loop feedback path during scheduling:", "details":[{"type":"text", "text":"129.00 clock cycles Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"96"}]}, {"type":"text", "text":"1.00 clock cycle 17-bit Select Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"95"}]}, {"type":"text", "text":"0.84 clock cycles 32-bit Floating-point Compare Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"96"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"95"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"96"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"97"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"98"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}, {"name":"store.B4", "data":["Yes", "~15", "11"], "debug":[[{"filename":"spMV_pipeline.cl", "line":105}]], "details":[{"type":"brief", "text":"Memory dependency"}, {"type":"text", "text":"Compiler failed to schedule this loop with smaller II due to memory dependency:", "details":[{"type":"text", "text":"From: Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}, {"type":"text", "text":"To: Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"114"}]}]}, {"type":"text", "text":"Most critical loop feedback path during scheduling:", "details":[{"type":"text", "text":"5.00 clock cycles \'Convert Floating-point to 64-bit Unsigned Integer\' Function Call Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"114"}]}, {"type":"text", "text":"1.00 clock cycle Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}, {"type":"text", "text":"1.00 clock cycle Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"114"}]}, {"type":"text", "text":"0.84 clock cycles 64-bit Integer Compare Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"117"}]}, {"type":"text", "text":"0.56 clock cycles 32-bit Floating-point Compare Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"109"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit Or Operation (%L, %L)", "links":[{"filename":"spMV_pipeline.cl", "line":"105"}, {"filename":"spMV_pipeline.cl", "line":"109"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"105"}]}, {"type":"text", "text":"0.28 clock cycles 1-bit And Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"105"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}, {"type":"text", "text":"Channel Read Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"114"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"106"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"114"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}]}';
var fmax_iiJSON='{"basicblocks":{"execute.B0":{"name":"execute.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":2, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "execute.B1":{"name":"execute.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"49"}]}]}}, "execute.B2":{"name":"execute.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "execute.B3":{"name":"execute.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":9, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "execute.B4":{"name":"execute.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":12, "latency":34, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"50"}]}]}}, "load.B0":{"name":"load.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":2, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "load.B1":{"name":"load.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":1, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "load.B2":{"name":"load.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":136, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"16"}]}]}}, "load.B3":{"name":"load.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":5, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"20"}]}]}}, "load.B4":{"name":"load.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "load.B5":{"name":"load.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "load.B6":{"name":"load.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":5, "latency":169, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"21"}]}]}}, "store.B0":{"name":"store.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":2, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "store.B1":{"name":"store.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":6, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"93"}]}]}}, "store.B2":{"name":"store.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "store.B3":{"name":"store.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":134, "latency":304, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"95"}]}]}}, "store.B4":{"name":"store.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":15, "latency":56, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"spMV_pipeline.cl", "line":"105"}]}]}}, "store.B5":{"name":"store.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":1, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "store.B6":{"name":"store.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"240.0", "achieved_ii":1, "latency":4, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}}, "functions":{"execute":{"debug":[{"filename":"spMV_pipeline.cl", "line":38}], "loop_hierachy":{"execute__no_loop":["execute.B0", "execute.B2"], "execute.B1":["execute.B1", "execute.B4", "execute.B3"], "execute.B4":["execute.B4"]}}, "load":{"debug":[{"filename":"spMV_pipeline.cl", "line":10}], "loop_hierachy":{"load__no_loop":["load.B0", "load.B1", "load.B4"], "load.B2":["load.B2"], "load.B3":["load.B3", "load.B6", "load.B5"], "load.B6":["load.B6"]}}, "store":{"debug":[{"filename":"spMV_pipeline.cl", "line":91}], "loop_hierachy":{"store__no_loop":["store.B0", "store.B2"], "store.B1":["store.B1", "store.B3", "store.B4", "store.B5", "store.B6"], "store.B3":["store.B3"], "store.B4":["store.B4"]}}}}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units"], "children":[{"name":"execute", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"spMV_pipeline.cl", "line":38}]]}, {"name":"load", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"spMV_pipeline.cl", "line":10}]]}, {"name":"store", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"spMV_pipeline.cl", "line":91}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"execute", "data":[3699, 4379, 0, 1, 63], "debug":[[{"filename":"spMV_pipeline.cl", "line":38}]]}, {"name":"load", "data":[12913, 20103, 154, 0, 37], "debug":[[{"filename":"spMV_pipeline.cl", "line":10}]]}, {"name":"store", "data":[8763, 18990, 43, 0, 218], "debug":[[{"filename":"spMV_pipeline.cl", "line":91}]]}, {"name":"Kernel Subtotal", "classes":["summary-highlight", "nohover"], "data":[25375, 43472, 197, 1, 318]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[4069, 5395, 61, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[134500, 172452, 397, 0, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[0, 67, 2, 0, 0]}, {"name":"Pipe and channel resources", "classes":["summary-highlight", "nohover"], "data":[30, 208, 0, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[163974, 221594, 657, 1, 318], "data_percent":[19.1917, 12.9678, 24.2167, 0.0658762]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[854400, 1708800, 2713, 1518, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[{"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"spMV_pipeline.cl", "line":22}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"spMV_pipeline.cl", "line":25}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"spMV_pipeline.cl", "line":28}]]}]}}';
var infoJSON='{"name":"Info","rows":[{"classes":["info-table"],"data":["spMV_pipeline"],"name":"Project Name"},{"data":["Arria 10, 10AX115S2F45I2SGES, dcp_bsp:pac_a10"],"name":"Target Family, Device, Board"},{"data":["19.4.0 Build 64"],"name":"AOC Version"},{"data":["19.2.0 Build 57 Pro"],"name":"Quartus Version"},{"data":["aoc -fast-compile -report spMV_pipeline.cl"],"name":"Command"},{"data":["Mon Nov 16 10:57:45 2020"],"name":"Reports Generated At"}]}';
var warningsJSON='{"rows":[{"debug":[[{"filename":"spMV_pipeline.cl","line":22}]],"details":["spMV_pipeline.cl:22: Compiler Warning:     Multiple writes to channel \'c0\' may lead to bad QoR"],"name":"    Multiple writes to channel \'c0\' may lead to bad QoR"}]}';
var quartusJSON='{"quartusFitClockSummary":{  "name":"Quartus Fit Clock Summary"  ,"columns":["", "Kernel fmax", "2x clock fmax"]  ,"children":[  {    "name":"Frequency (MHz)","data":[210.00 ,420.00]  }]},"quartusFitResourceUsageSummary":{  "name":"Quartus Fit Resource Utilization Summary"  ,"columns":["", "ALMs", "FFs", "RAMs", "DSPs", "MLABs"]  ,"children":[  {"name":"Full design (all kernels)","data":["71,973" ,"127,287" ,"643 / 2,713" ,"0" ,"460"  ]  }]}}';
var fileJSON=[{"path":"/home/u44994/spMV/spMV/host/inc/spMV.h", "name":"spMV.h", "has_active_debug_locs":false, "absName":"/home/u44994/spMV/spMV/host/inc/spMV.h", "content":"// Copyright (C) 2013-2018 Altera Corporation, San Jose, California, USA. All rights reserved.\012// Permission is hereby granted, free of charge, to any person obtaining a copy of this\012// software and associated documentation files (the \"Software\"), to deal in the Software\012// without restriction, including without limitation the rights to use, copy, modify, merge,\012// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to\012// whom the Software is furnished to do so, subject to the following conditions:\012// The above copyright notice and this permission notice shall be included in all copies or\012// substantial portions of the Software.\012// \012// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\012// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\012// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\012// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\012// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\012// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\012// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\012// OTHER DEALINGS IN THE SOFTWARE.\012// \012// This agreement shall be governed in all respects by the laws of the State of California and\012// by the laws of the United States of America.\012\012#ifndef SPMV_H\012#define SPMV_H\012\012// Block size. Affects the kernel, so if this value changes, the kernel\012// needs to be recompiled.\012#define BLOCK_SIZE (64ul) // default value\012#define SEGMENT (1024ul)\012\012#define BATCH (1000)\012\012// SCALE and N must have the following relationship: N = 2 ^ SCALE\012#define SCALE (15)\012// #define N ((unsigned long)pow(2, SCALE))\012#define N (32768ul)\012#define DEGREE (3)\012#define NNZ (DEGREE * N)\012// #define ITER (10)\012\012typedef unsigned long spMV_data;\012\012#define ARRAY(ptr,i1,i0,d1,d0) (*((ptr)+(i1)*(d0)+(i0)))\012\012#define RANGE (10)\012\012#define EPSILON (1e-4)  // do not change this value\012#endif\012\012"}, {"path":"/home/u44994/spMV/spMV/device/spMV_pipeline.cl", "name":"spMV_pipeline.cl", "has_active_debug_locs":false, "absName":"/home/u44994/spMV/spMV/device/spMV_pipeline.cl", "content":"#include \"../host/inc/spMV.h\"\012\012#ifndef SIMD_WORK_ITEMS\012#define SIMD_WORK_ITEMS 4 // default value\012#endif\012\012#pragma OPENCL EXTENSION cl_intel_channels : enable\012channel float c0, c1;\012\012__kernel void load(__global float* restrict V, __global spMV_data* restrict col, __global spMV_data* restrict row, \012                     __global float* restrict x, const spMV_data real_NNZ) {\012    // printf(\"kernel load\\n\");\012    __private float x_seg[SEGMENT];\012\012    // Stream the first segment of x from DRAM to fast memory\012    for (int i = 0; i < SEGMENT; i++) {\012        x_seg[i] = x[i];\012    }\012\012    for (int m = 0; m < BATCH; m++) {\012        for (int i = 0; i < real_NNZ; i++) {\012            write_channel_intel(c0, row[i]);\012            // printf(\"kernel write channel c0 row[%d]: %lu\\n\", i, row[i]);\012\012            write_channel_intel(c0, col[i]);\012            // printf(\"kernel write channel c0 col[%d]: %lu\\n\", i, col[i]);\012\012            write_channel_intel(c0, V[i]);\012            // printf(\"kernel write channel c0 V[%d]: %f\\n\", i, V[i]);\012\012            write_channel_intel(c0, x_seg[col[i]]);\012            // printf(\"kernel write channel c0 x_seg[%lu]: %f\\n\", col[i], x_seg[col[i]]);\012        }\012    }\012    // printf(\"kernel load done.\\n\");\012}\012\012__kernel void execute(const spMV_data real_NNZ) {\012    // printf(\"kernel execute\\n\");\012    spMV_data row_prev, row_curr, col_curr;\012    float x_curr, V_curr;\012\012    float y_temp = 0.0f;\012\012    spMV_data k = 0;\012\012    row_prev = 0;\012\012    for (int m = 0; m < BATCH; m++) {\012        for (int i = 0; i < real_NNZ; i++) {\012            row_curr = read_channel_intel(c0);\012            // printf(\"kernel read channel c0 row: %lu\\n\", row_curr);\012\012            col_curr = read_channel_intel(c0);\012            // printf(\"kernel read channel c0 col: %lu\\n\", col_curr);\012\012            V_curr = read_channel_intel(c0);\012            // printf(\"kernel read channel c0 V: %f\\n\", V_curr);\012\012            x_curr = read_channel_intel(c0);\012            // printf(\"kernel read channel c0 x: %f\\n\", x_curr);\012\012            // spMV\012            if (row_prev != row_curr){\012                write_channel_intel(c1, y_temp);\012                // printf(\"kernel write channel c1 y: %f\\n\", y_temp);\012\012                write_channel_intel(c1, row_prev);\012                // printf(\"kernel write channel c1 row: %lu\\n\", row_prev);\012\012                k++;\012\012                y_temp = 0.0f;\012            }\012            y_temp += V_curr * x_curr;\012\012            row_prev = row_curr;\012        }\012        write_channel_intel(c1, y_temp);\012        // printf(\"kernel write channel c1 y: %f\\n\", y_temp);\012\012        write_channel_intel(c1, row_prev);\012        // printf(\"kernel write channel c1 row: %lu\\n\", row_prev);\012\012        write_channel_intel(c1, -1);\012        // printf(\"kernel write channel c1 terminate\\n\");\012    }\012    // printf(\"kernel execute done.\\n\");\012}\012\012__kernel void store(__global float* restrict y, __global spMV_data* restrict y_idx) {\012    // printf(\"kernel store\\n\");\012    for (int m = 0; m < BATCH; m++) {\012        // Initialize the output\012        for (int i = 0; i < N; i++) {\012            if (y[i] != 0) {\012                y[i] = 0;\012                y_idx[i] = 0;\012            }\012            else {\012                break;\012            }\012        }\012\012        for (int i = 0; i < N; i++) {\012            y[i] = read_channel_intel(c1);\012            // printf(\"kernel read channel c1 y[%d]: %f\\n\", i, y[i]);\012\012            if (y[i] < 0) {\012                // printf(\"kernel store terminate\\n\");\012                break;\012            }\012\012            y_idx[i] = read_channel_intel(c1);\012            // printf(\"kernel read channel c1 y_idx[%d]: %lu\\n\", i, y_idx[i]);\012\012            if (y_idx[i] == -1) {\012                printf(\"Error!!!\\n\");\012                break;\012            }\012        }\012    }\012    // printf(\"kernel store done.\\n\");\012}\012\012// __kernel void spMV( __global float* restrict V, __global spMV_data* restrict col, __global spMV_data* restrict row, \012//                      __global float* restrict x, __global float* restrict y, __global spMV_data* restrict y_idx, \012//                      const spMV_data real_NNZ)\012// {\012//     __private float x_seg[SEGMENT];\012\012//     unsigned long i, j;\012//     spMV_data k;\012//     spMV_data row_start, row_end;\012\012//     for (int m = 0; m < BATCH; m++){\012//         k = 0;\012\012//         for (i = 0; i < N; i++) {\012//             y[i] = 0;\012//             y_idx[i] = 0;\012//         }\012\012//         // Stream the first segment of x from DRAM to fast memory\012//         for (i = 0; i < SEGMENT; i++) {\012//             x_seg[i] = x[i];\012//         }\012\012//         // spMV\012//         for (i = 0; i < real_NNZ; i++) {\012//             y[k] += V[i] * x_seg[col[i]];\012//             if (i == real_NNZ - 1 || row[i+1] != row[i]){\012//                 y_idx[k] = row[i];\012//                 k++;\012//             }\012//         }\012\012//         // printf(\"Kernel k = %lu\\n\", k);\012//     }\012// }\012"}];
